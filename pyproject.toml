# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "svaeva-evaluation"
version = "0.1.0"
description = "`svaeva-evaluation` is a Python cli/package"
readme = "README.md"
authors = ["svaeva-evaluation <eric@gradiente.space>"]
license = "MIT"
repository = "https://github.com/elacosse/svaeva-evaluation"
homepage = "https://github.com/elacosse/svaeva-evaluation"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"svaeva-evaluation" = "svaeva_evaluation.__main__:app"

[tool.poetry.dependencies]
svaeva-redux = { git = "https://github.com/elacosse/svaeva-redux.git", branch = "master" }
python = "^3.11.4"
typer = {extras = ["all"], version = "^0.9.0"}
python-dotenv = "^1.0.1"
requests = "^2.31.0"
httpx = "^0.27.0"
fastapi = "^0.110.0"
numpy = "^1.26.3"
matplotlib = "^3.8.2"
scikit-learn = "^1.4.0"
tiktoken = "^0.5.2"
networkx = "^3.2.1"
pyvis = "^0.3.2"
langchain-openai = "^0.0.8"
langserve = "^0.0.47"
openai = "^1.13.3"
seaborn = "^0.13.2"
opencv-python = "^4.9.0.80"
elevenlabs = "^1.0.5"


[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
darglint = "^1.8.1"
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
pytest = "^6.2.5"
pyupgrade = "^2.29.1"
ruff = "^0.0.238"
safety = "^1.10.3"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
yamllint = "^1.29.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.4"

[tool.ruff]
# https://github.com/charliermarsh/ruff
line-length = 120
extend-select = ['Q']

[tool.yamllint]
max-line-length = 120

[tool.black]
# https://github.com/psf/black
color = true
line-length = 120
target-version = ["py311"]
skip-string-normalization = true

[tool.isort]
# https://github.com/timothycrosley/isort/
line-length = 120
known_first_party = "svaeva-evaluation"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.11
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "svaeva-evaluation"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
